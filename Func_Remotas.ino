void control(bool data)
{
 if(data == true){ 
      //on
      Serial.println("w");
      lcd.setCursor(0,0);
      lcd.print("    Ligando Ar  ");
      int khz = 38; // 38kHz carrier frequency for the NEC protocol
      unsigned int irSignal[] =  {6092, 7428, 612, 1568, 612, 1576, 608, 1568, 612, 1556, 624, 1536, 644, 1572, 612, 1572, 608, 1572, 608, 512, 580, 512, 580, 508, 584, 508, 580, 508, 580, 512, 580, 512, 580, 508, 584, 1568, 608, 1576, 608, 1568, 612, 1572, 608, 1572, 608, 1576, 604, 1528, 656, 1572, 608, 512, 580, 508, 584, 508, 580, 512, 580, 508, 580, 512, 580, 508, 584, 508, 584, 1492, 684, 1576, 608, 1444, 732, 1492, 692, 1572, 608, 1576, 608, 1484, 696, 1572, 608, 512, 580, 512, 580, 508, 584, 508, 584, 504, 584, 508, 584, 508, 580, 508, 584, 1568, 612, 508, 584, 508, 580, 1548, 632, 1572, 612, 1568, 612, 1528, 652, 1572, 608, 512, 580, 1572, 612, 1568, 612, 508, 580, 508, 580, 512, 576, 512, 580, 512, 572, 1580, 604, 1576, 608, 1572, 604, 1580, 600, 1580, 576, 544, 540, 1612, 568, 1612, 568, 552, 512, 576, 512, 580, 532, 560, 504, 584, 508, 1644, 536, 584, 508, 580, 508, 584, 508, 1644, 536, 584, 508, 1644, 548, 572, 508, 1644, 536, 584, 504, 584, 508, 1644, 536, 584, 508, 1648, 532, 584, 508, 1644, 536, 584, 508, 1644, 536, 1644, 532, 7368, 532};     
 
      irsend.sendRaw(irSignal, sizeof(irSignal) / sizeof(irSignal[0]), khz); //Note the approach used to automatically calculate the size of the array.
      delay(2000);
     }
else{  
      //off
      Serial.println("a");
      lcd.setCursor(0,0);
      lcd.print(" Desligando Ar  ");
      int khz = 38; // 38kHz carrier frequency for the NEC protocol
      unsigned int irSignal2[] = {6120, 7400, 560, 1620, 560, 1620, 540, 1640, 540, 1640, 540, 1644, 536, 1644, 564, 1616, 540, 1640, 540, 552, 560, 528, 540, 556, 560, 528, 560, 528, 560, 532, 536, 556, 560, 528, 560, 1620, 536, 1644, 564, 1616, 560, 1620, 560, 1620, 560, 1620, 540, 1640, 540, 1640, 564, 528, 560, 528, 560, 532, 564, 528, 560, 532, 532, 556, 536, 556, 544, 544, 560, 1620, 560, 1620, 564, 1616, 560, 1620, 564, 1620, 560, 1620, 560, 1620, 560, 1620, 560, 532, 560, 532, 560, 532, 556, 532, 560, 528, 560, 528, 564, 532, 556, 532, 536, 1644, 560, 1620, 560, 532, 536, 1640, 564, 1616, 564, 1620, 560, 1620, 560, 1620, 560, 528, 564, 528, 564, 1616, 564, 528, 560, 532, 560, 528, 560, 532, 556, 532, 560, 1620, 560, 1620, 560, 1620, 564, 1616, 564, 1616, 564, 528, 560, 1620, 564, 1616, 564, 528, 564, 528, 560, 528, 564, 528, 560, 556, 536, 1616, 564, 528, 560, 532, 560, 528, 560, 1620, 560, 532, 560, 1620, 560, 532, 560, 1620, 560, 528, 560, 532, 560, 1620, 560, 532, 560, 1620, 560, 528, 560, 1624, 556, 532, 560, 1620, 564, 1616, 560, 7336, 564};
      
      irsend.sendRaw(irSignal2, sizeof(irSignal2) / sizeof(irSignal2[0]), khz); //Note the approach used to automatically calculate the size of the array.
      delay(2000);
     }

}
